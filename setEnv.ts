/* tslint:disable */
// @ts-nocheck
const { writeFile, existsSync, mkdirSync } = require('fs');
const { argv } = require('yargs');

require('dotenv').config();
const environment = argv.environment || 'prod';
const project = argv.project;

if (!project) {
  console.error('Please provide a project');
  return false;
}

function writeFileUsingFS(targetPath, environmentFileContent) {
  writeFile(targetPath, environmentFileContent, function (err) {
    if (err) {
      console.log(err);
    }
    if (environmentFileContent !== '') {
      console.log(`wrote variables to ${targetPath}`);
    }
  });
}

// Providing path to the `environments` directory
const envDirectory = `./projects/${project}/src/environments`;

// creates the `environments` directory if it does not exist
if (!existsSync(envDirectory)) {
  console.error('Cannot find project with given project name');
  return false;
}

//creates the `environment.prod.ts` and `environment.ts` file if it does not exist
writeFileUsingFS(`${envDirectory}/environment.prod.ts`, '');
writeFileUsingFS(`${envDirectory}/environment.ts`, '');

// Checks whether command line argument of `prod` was provided signifying production mode
const isProduction = environment === 'prod';

// choose the correct targetPath based on the environment chosen
const targetPath = isProduction
  ? `${envDirectory}/environment.prod.ts`
  : `${envDirectory}/environment.ts`;

//actual content to be compiled dynamically and pasted into respective environment files
const environmentFileContent = `
  // This file was autogenerated by dynamically running setEnv.ts and using dotenv for managing API key secrecy
  export const environment = {
    production: ${isProduction},
    firebase: ${process.env.FIREBASE}
  };
`;

writeFileUsingFS(targetPath, environmentFileContent); // appending data into the target file

/* tslint:enable */
